# -*- coding: utf-8 -*-
# @Time    : 2020/7/13 10:14
# @Author  : guoyunfei.0603
# @File    : home_work2.py

'''
二、扩展题（选做）
温馨提示：难度系数偏高做不出来没关系
1、题目：企业发放的奖金根据利润提成（提示：用到的知识点：条件判断）
用户输入利润

利润低于或等于10万元时，奖金可提10%；
利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；
20万到40万之间时，高于20万元的部分，可提成5%；
40万到60万之间时，高于40万元的部分，可提成3%；
60万到100万之间时，高于60万元的部分，可提成1.5%，高于
100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？
'''

prize = float(input("请输入当月利润："))
# 低于10万
p1 = 100000 * 0.1
# 10~20万
p2 = (prize - 100000) * 0.075 + p1
# 20~40万
p3 = (prize - 200000) * 0.05 + (100000 * 0.1) + (100000 * 0.075)
# 40~60万
p4 = (prize - 400000) * 0.003 + (200000 * 0.05) + (100000 * 0.1) + (100000 * 0.075)
# 60~100万
p5 = (prize - 600000) * 0.015 + (200000 * 0.03) + (200000 * 0.05) + (100000 * 0.1) + (100000 * 0.075)
# 100万以上
p6 = (prize - 1000000) * 0.01 + (400000 * 0.015) + (200000 * 0.03) + (200000 * 0.05) + (100000 * 0.1) + (100000 * 0.075)

if prize <= 100000:
    print("应发奖金总数为：{:.2f}元".format(p1))

elif 100000 < prize < 200000:
    print("应发奖金总数为：{:.2f}元".format(p2))
elif 200000 <= prize < 400000:

    print("应发奖金总数为：{:.2f}元".format(p3))
elif 400000 <= prize < 600000:

    print("应发奖金总数为：{:.2f}元".format(p4))
elif 600000 <= prize < 1000000:

    print("应发奖金总数为：{:.2f}元".format(p5))
elif 1000000 <= prize:

    print("应发奖金总数为：{:.2f}元".format(p6))
else:
    print("金额输入有误！")

'''
2、编写一个文字版的自动售货机的代码，运行功能如下:
提示：用到的主要知识点，条件判断 、while循环
1、运行程序打印如下提示，
请用输入您购买的商品编号：

【1】可乐 2.5元​ 【2】雪碧 2.5元​ 【3】哇哈哈 3元​ 【4】红牛 6元​ 【5】脉动 4元​ 【6】果粒橙 3.5元

2、用户输入选择之后，打印如下格式的提示：您购买的是XX，需要支付金额为XX元
3、打印：请投币（支持1元，5元，10元）
4、用户输入投币金额，判断用户输入金额是否大于商品价格
用户投币金额不够商品价格，继续提示投币，

当投币超过商品价格，则打印投币的金额和找零金额，然后结束程序
'''
print("---------------------简单版---------------------")

drinks = {1: "可乐", 2: "雪碧", 3: "哇哈哈", 4: "红牛"}
drink_price = [2.5, 2.5, 3, 6]

product_no = int(input("请输入你要购买的商品编号：\n"
                       "【1】可乐 2.5元​ 【2】雪碧 2.5元​ 【3】哇哈哈 3元​ 【4】红牛 6元​ 【5】脉动 4元​ 【6】果粒橙 3.5元:"))

# 商品价格
price = drink_price[(product_no - 1)]

print("你购买的是{},需要支付金额为{}元".format(drinks[product_no], price))

toubi = int(input("请投币（支持1元，5元，10元）:"))
toubi_no = [1, 5, 10]
if toubi in toubi_no:
    if toubi > price:
        print("投币的金额为{}元,找零{}元".format(toubi, toubi - price))
    elif toubi == price:
        print("投币的金额为{}元,购买完成~".format(toubi))
    elif toubi < price:
        print("投币的金额为{}元,还差{}元,请继续投币~".format(toubi, price - toubi))
else:
    print("只支持1元，5元，10元,请重新投币！")

print("↓↓↓---------------------升级版---------------------↓↓↓")

drinks = {1: "可乐", 2: "雪碧", 3: "哇哈哈", 4: "红牛", 5: "脉动", 6: "果粒橙"}
price = {"可乐": 2.5, "雪碧": 2.5, "哇哈哈": 3, "红牛": 6, "脉动": 4, "果粒橙": 3.5}

drinks_sum = []  # 存储要购买的商品
price_sum = 0  # 总金额

print("自动售货机：【1】可乐 2.5元​ 【2】雪碧 2.5元​ 【3】哇哈哈 3元​ 【4】红牛 6元​ 【5】脉动 4元​ 【6】果粒橙 3.5元")

while True:
    product_id = int(input("请输入你要购买的商品编号(每次只能输入1个商品编号，输入0结束！)："))

    if product_id == 0:
        break

    drinks_name = drinks[product_id]  # 饮料名称
    drinks_sum.append(drinks_name)  # 把选择购买的商品添加到列表

for i in drinks_sum:
    price_sum += price[i]  # price[i] 是商品价格

print("你购买的商品是{},需要支付金额为{}元 ".format(drinks_sum, price_sum))
toubi = int(input("请投币（支持1元，5元，10元）:"))
toubi_no = [1, 5, 10]
if toubi in toubi_no:
    if toubi > price_sum:
        print("投币的金额为{}元,找零{}元".format(toubi, toubi - price_sum))
    elif toubi == price_sum:
        print("投币的金额为{}元,购买完成~".format(toubi))
    elif toubi < price_sum:
        print("投币的金额为{}元,还差{}元,请继续投币~".format(toubi, price_sum - toubi))

else:
    print("只支持1元，5元，10元,请重新投币！")
